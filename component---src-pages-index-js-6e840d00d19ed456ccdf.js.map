{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["linkStyle","padding","IndexPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","className","_components_seo__WEBPACK_IMPORTED_MODULE_3__","style","display","justifyContent","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","target","href","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","Layout","_this$props","children","header","rootPath","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","__PATH_PREFIX__","console","log","Date","getFullYear","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-6e840d00d19ed456ccdf.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport '../components/layout.css';\r\n\r\nconst linkStyle = {\r\n  padding: '10px',\r\n};\r\n\r\nclass IndexPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const siteTitle = data.site.siteMetadata.title;\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <div className=\"index\">\r\n          <SEO title=\"Home\" />\r\n          <h1>Hi â€” You look nice today.</h1>\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Link style={linkStyle} to=\"/about\">\r\n              about\r\n            </Link>\r\n            <a\r\n              style={linkStyle}\r\n              target=\"_blank\"\r\n              href=\"https://github.com/robbedec\"\r\n            >\r\n              portfolio\r\n            </a>\r\n            <Link style={linkStyle} to=\"/blog\">\r\n              blog\r\n            </Link>\r\n            <a\r\n              style={linkStyle}\r\n              target=\"_blank\"\r\n              href=\"https://robbedec.github.io/resume\"\r\n            >\r\n              resume\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\nconst typography = new Typography(Wordpress2016)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { rhythm, scale } from '../utils/typography';\r\n\r\nimport './layout.css';\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props;\r\n    const rootPath = `${__PATH_PREFIX__}/`;\r\n    let header = null;\r\n\r\n    if (location.pathname === rootPath + 'blog') {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            ...scale(1.5),\r\n            marginBottom: rhythm(1.5),\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/blog`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      );\r\n    } else if (\r\n      location.pathname === rootPath + 'about' ||\r\n      location.pathname === rootPath\r\n    ) {\r\n      header = null;\r\n      console.log('test');\r\n    } else {\r\n      header = (\r\n        <h3>\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/blog`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"layout\">\r\n        {header ? <header>{header}</header> : null}\r\n        {children}\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}